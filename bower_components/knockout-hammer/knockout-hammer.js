// Generated by CoffeeScript 1.7.1

/*
* Knockout Hammer
* knockout (https://github.com/SteveSanderson/knockout)
* hammer.js (https://github.com/EightMedia/hammer.js)
* Usage: data-bind="hmHold: holdHandlerFn, hmOptions: { hold_timeout: 400 }"
* http://jsfiddle.net/9AA7U/1/
 */
define(["knockout", "hammer"], function(ko, Hammer) {
  return ['hold', 'tap', 'doubletap', 'drag', 'dragstart', 'dragend', 'dragup', 'dragdown', 'dragleft', 'dragright', 'swipe', 'swipeup', 'swipedown', 'swipeleft', 'swiperight', 'transform', 'transformstart', 'transformend', 'rotate', 'pinch', 'pinchin', 'pinchout', 'touch', 'release'].forEach(function(gesture) {
    return ko.bindingHandlers["hm" + (gesture[0].toUpperCase()) + (gesture.slice(1).toLowerCase())] = {
      init: function(element, valueAccessor, allBindingsAccessor, data) {
        var handler, options;
        if (!valueAccessor()) {
          return false;
        }
        options = allBindingsAccessor().hmOptions || {};
        handler = valueAccessor().bind(data);
        if (data.hammer == null) {
          data.hammer = Hammer(element, options);
        }
        data.hammer.on(gesture, handler);
        ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
          return data.hammer.off(gesture, handler);
        });
        return true;
      }
    };
  });
});
